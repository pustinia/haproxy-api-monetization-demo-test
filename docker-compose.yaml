version: "3"

networks:
  mynet:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24

volumes:
  postgres_data:

services:

  haproxy:
    image: haproxy-custom
    build: .
    networks:
      mynet:
        ipv4_address: 172.25.0.11
    hostname: haproxy1
    volumes:
      - "./haproxy.cfg:/etc/haproxy/haproxy.cfg"
      - "./pubkey.pem:/etc/haproxy/pem/pubkey.pem"
    ports:
      - "80:80"
      - "8404:8404"
      - "9999:9999"
    depends_on:
      - server1
      - server2
      - server3
      - keycloak

  server1:
    image: nramirez/echo-server:latest    # listens on port 8080
    build: ./echo-server
    networks:
      mynet:
        ipv4_address: 172.25.0.12

  server2:
    image: nramirez/echo-server:latest    # listens on port 8080
    build: ./echo-server
    networks:
      mynet:
        ipv4_address: 172.25.0.13

  server3:
    image: nramirez/echo-server:latest    # listens on port 8080
    build: ./echo-server
    networks:
      mynet:
        ipv4_address: 172.25.0.14
  
  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: "exit 0"
    networks:
      mynet:
        ipv4_address: 172.25.0.16

  keycloak:
    image: quay.io/keycloak/keycloak:latest  # listens on port 8080
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_PASSWORD=123456
      - KC_DB_USERNAME=keycloak
      - KC_DB_SCHEMA=public
      # set admin id & password
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # set keycloak root context
      - KC_HTTP_RELATIVE_PATH=/auth
      # set keycloak health check enabled
      - KC_HEALTH_ENABLED=true
      # set keycloak proxy forwarding enabled
      - KC_PROXY_HEADERS=forwarded
      #- KC_HOSTNAME=keycloakpro
      # set database type
      #- DB_VENDOR=h2
      # set keycloak debug level
      #- KC_LOG_LEVEL=DEBUG
      # set keycloak proxy forwarding enabled
      #- PROXY_ADDRESS_FORWARDING=true
    volumes:
      # add keycloak disk mount
      - ./data/:/opt/keycloak/data/h2/
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/localhost/8080'
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    logging:
      driver: "json-file"
      options:
        mode: "non-blocking"
        max-size: "10m"
        max-file: 5
    networks:
      mynet:
        ipv4_address: 172.25.0.15
    command:
      # Starting Keycloak in development mode
      #- start-dev
      # Starting Keycloak in production mode, htts, database need
      #- start
    depends_on:
      postgres:
        condition: service_healthy
